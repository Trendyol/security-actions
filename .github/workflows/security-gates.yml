name: security-gates

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  security-gates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      ##################################################
      # 🕵️ Gitleaks
      ##################################################
      - name: Install Gitleaks
        run: |
          wget -q https://github.com/gitleaks/gitleaks/releases/download/v8.22.1/gitleaks_8.22.1_linux_x64.tar.gz
          tar -xzf gitleaks_8.22.1_linux_x64.tar.gz
          chmod +x gitleaks

      - name: Run Gitleaks
        id: gitleaks_scan
        run: |
          START=$(date +%s)
          ./gitleaks detect --report-format json --report-path gitleaks-results.json --redact || true
          END=$(date +%s)
          echo "GITLEAKS_DURATION=$((END - START))" >> $GITHUB_ENV

      ##################################################
      # 🕵️ Semgrep
      ##################################################
      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep
        id: semgrep_scan
        run: |
          START=$(date +%s)
          semgrep ci --json --output=semgrep-results.json || true
          END=$(date +%s)
          echo "SEMGREP_DURATION=$((END - START))" >> $GITHUB_ENV

      ##################################################
      # 🕵️ Grype SBOM
      ##################################################
      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Run Grype SBOM scan
        id: grype_scan
        run: |
          START=$(date +%s)
          grype dir:. -o json > grype-results.json || true
          END=$(date +%s)
          echo "GRYPE_DURATION=$((END - START))" >> $GITHUB_ENV

      ##################################################
      # 📊 Compute Vulnerability Counts
      ##################################################
      - name: Compute vulnerability counts
        id: vuln_count
        run: |
          if [ -f grype-results.json ]; then
            CRITICAL=$(jq '[.matches[] | select(.vulnerability.severity=="Critical")] | length' grype-results.json)
            HIGH=$(jq '[.matches[] | select(.vulnerability.severity=="High")] | length' grype-results.json)
            MEDIUM=$(jq '[.matches[] | select(.vulnerability.severity=="Medium")] | length' grype-results.json)
            LOW=$(jq '[.matches[] | select(.vulnerability.severity=="Low")] | length' grype-results.json)
            TOTAL=$(jq '.matches | length' grype-results.json)
          else
            CRITICAL=0; HIGH=0; MEDIUM=0; LOW=0; TOTAL=0
          fi

          echo "CRITICAL_COUNT=$CRITICAL" >> $GITHUB_ENV
          echo "HIGH_COUNT=$HIGH" >> $GITHUB_ENV
          echo "MEDIUM_COUNT=$MEDIUM" >> $GITHUB_ENV
          echo "LOW_COUNT=$LOW" >> $GITHUB_ENV
          echo "TOTAL_COUNT=$TOTAL" >> $GITHUB_ENV

      ##################################################
      # 🚀 Send to Elastic
      ##################################################
      - name: Send metrics to Elasticsearch
        env:
          ES_USER: ${{ secrets.ES_USER }}
          ES_PASS: ${{ secrets.ES_PASS }}
          ELASTIC_URL: ${{ secrets.ELASTIC_URL }}
          CRITICAL_COUNT: ${{ env.CRITICAL_COUNT }}
          HIGH_COUNT: ${{ env.HIGH_COUNT }}
          MEDIUM_COUNT: ${{ env.MEDIUM_COUNT }}
          LOW_COUNT: ${{ env.LOW_COUNT }}
          TOTAL_COUNT: ${{ env.TOTAL_COUNT }}
          GRYPE_DURATION: ${{ env.GRYPE_DURATION }}
          SEMGREP_DURATION: ${{ env.SEMGREP_DURATION }}
          GITLEAKS_DURATION: ${{ env.GITLEAKS_DURATION }}
          START_TIME: ${{ env.START_TIME }}
        run: |
          END_TIME=$(date +%s)
          TOTAL_DURATION=$((END_TIME - START_TIME))

          PAYLOAD=$(jq -n \
            --arg timestamp "$(date --utc +'%Y-%m-%dT%H:%M:%SZ')" \
            --arg pipeline "${{ github.run_id }}" \
            --arg repo "${{ github.repository }}" \
            --arg branch "${{ github.ref_name }}" \
            --arg commit "${{ github.sha }}" \
            --arg trigger_user "${{ github.actor }}" \
            --argjson critical "$CRITICAL_COUNT" \
            --argjson high "$HIGH_COUNT" \
            --argjson medium "$MEDIUM_COUNT" \
            --argjson low "$LOW_COUNT" \
            --argjson total "$TOTAL_COUNT" \
            --argjson grype_duration "$GRYPE_DURATION" \
            --argjson semgrep_duration "$SEMGREP_DURATION" \
            --argjson gitleaks_duration "$GITLEAKS_DURATION" \
            --argjson total_duration "$TOTAL_DURATION" \
            '{
              "@timestamp": $timestamp,
              "pipeline": $pipeline,
              "repository": $repo,
              "branch": $branch,
              "commit": $commit,
              "trigger_user": $trigger_user,
              "vulnerability_summary": {
                "critical": $critical,
                "high": $high,
                "medium": $medium,
                "low": $low,
                "total": $total
              },
              "durations": {
                "grype_duration_sec": $grype_duration,
                "semgrep_duration_sec": $semgrep_duration,
                "gitleaks_duration_sec": $gitleaks_duration,
                "total_duration_sec": $total_duration
              }
            }')

          echo "Payload to send:"
          echo "$PAYLOAD"

          curl -X POST "$ELASTIC_URL" \
            -u "${ES_USER}:${ES_PASS}" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD"
